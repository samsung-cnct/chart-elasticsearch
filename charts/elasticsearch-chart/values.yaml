# Default values for elasticsearch.
# This is a YAML-formatted file.
# Declare name/value pairs to be passed into your templates.
# name: value
# ======================================
# setup for ElasticSearch
#
image: docker.elastic.co/elasticsearch/elasticsearch:6.4.2
name: elasticsearch

cluster_name: elasticsearch-cluster
network_host: 0.0.0.0

#Testing (just needs curl, bats)
test:
  image: quay.io/samsung_cnct/e2etester:prod
  account: elastic
  #password: is read from the secret set for the chart

#Services
services:
  es:
    name: elasticsearch
    port: 9200
    port_name: http
    # public: false then no type and nodeport: none
    public: true
    # public: true then type is used.  set annotation for public DNS also
    type: LoadBalancer
    annotations:
      # This annotation is what tells external-dns to create and link the ELB to the FQDN
      # Replace <mydomin>.cluster.cncnt.io with your real domain in router53
      # NOTE: the default is an invalid domain and will not be created if not set corretctly.
    - key: external-dns.alpha.kubernetes.io/hostname
      value: "es.<mydomain>.cluster.cnct.io"
  discovery:
    service_name: elasticsearch-discovery
    cluster_port: 9300
    cluster_port_name: cluster-comms
    app_selector: elasticsearch-data

security:
  # This sets the initial password for ElasticSearch user 'elastic'
  # This should be passed in on the command line:  --set security.password=mynewpassord
  password: changeme

data_envs:
  HTTP_ENABLE: "true"
  NODE_DATA: "true"
  NODE_MASTER: "false"
  HTTP_CORS_ENABLE: "false"
  HTTP_CORS_ALLOW_ORIGIN: ""
  MEMORY_LOCK: "false"
  
master_envs: 
  HTTP_ENABLE: "false"
  NODE_DATA: "false"
  NODE_MASTER: "true"
  HTTP_CORS_ENABLE: "false"
  HTTP_CORS_ALLOW_ORIGIN: ""
  MEMORY_LOCK: "false"

#Master StatefulSet
#
# Need a storage class for CI testing
master_create_storage_class: false
# required: aws | azure | vmware | bare
master_storage_provisioner: "aws"
#
master_name: elasticsearch-master
# master_replicas: if changing this value, please also update the
# elasticsearch configuration file quorum settings in the
# samsung_cnct/elasticsearch image. This value should not be altered
# when running in production
master_replicas: 3
master_imagePullPolicy: Always
master_cpu_limits: 500m
master_cpu_requests: 500m
master_memory_limits: 4Gi
master_memory_requests: 4Gi
# master_volume_storage: set to small so when exploring with this the
# user doesn't accidentally create very large disks
master_volume_storage: 20Gi
# Xms & Xmx: must be the same
# should be ~75% of total memory allocation
master_Xms_Xmx: 3g
master_tolerations:
 # - key: taintKey
 #   value: taintValue
 #   operator: Equal
 #   effect: NoSchedule
master_scheduling:
  affinity:
    node:
      type: #requiredDuringSchedulingIgnoredDuringExecution
      labels:
      # - key: iamalabelkey
      #   operator: In
      #   values: ["value1", "value2"]
# Peristent Valume Setup
# Data mount point
master_data_mount: "/usr/elasticsearch/data"
#   Note the value must match the name of a pre-created Storage Class
master_storage_class_key: "volume.beta.kubernetes.io/storage-class"
master_storage_class_value: "anything"
#
# aws storage, vmware, bare metal:
#    no extra params
# azure
# Standard_LRS | Premium_LRS
master_storage_azure_type: Standard_LRS
# Shared | Managed | Dedicated
master_storage_azure_kind: Managed

#Cluster StatefulSet
# Need a storage class for CI testing
data_create_storage_class: false
# required: aws | azure | vmware | bare
data_storage_provisioner: "aws"
#
data_name: elasticsearch-data
# data_replicas: This can be changed at will for scaling purposes
# either in this chart or at the command line during production
data_replicas: 3
# resource notes:  datanodes are pretty heavy.
# These should be modified up for a real production setting
# recommendation is two cores and 20GB of memory for the containers
data_cpu_limits: 500m
data_memory_limits: 4Gi
data_cpu_requests: 500m
data_memory_requests: 4Gi
data_volume_storage: 20Gi
# Xms & Xmx: must be the same
# should be ~75% of total memory allocation
data_Xms_Xmx: 3g
data_tolerations:
 # - key: taintKey
 #   value: taintValue
 #   operator: Equal
 #   effect: NoSchedule
data_scheduling:
  affinity:
    node:
      type: #requiredDuringSchedulingIgnoredDuringExecution
      labels:
      # - key: iamalabelkey
      #   operator: In
      #   values: ["value1", "value2"]

#  if you want to be able to write data to this cluster from 
#  outside the cluster, set the ingress.host value
#ingress:
#  host: elasticsearch.ingest.company.org
#
# Data mount point
data_data_mount: "/usr/elasticsearch/data"
# Peristent Valume Setup
#   Note the value must match the name of a pre-created Storage Class
data_storage_class_key: "volume.beta.kubernetes.io/storage-class"
data_storage_class_value: "anything"
#
# aws storage, vmware, bare metal:
#    no extra params
# azure
# Standard_LRS | Premium_LRS
data_storage_azure_type: Standard_LRS
# Shared | Managed | Dedicated
data_storage_azure_kind: Managed
