apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: {{.Values.master_name}}
  labels:
    app: {{ template "name" . }}
    chart: {{ template "namewithversion" . }}
    release: "{{.Release.Name}}"
    heritage: "{{.Release.Service}}"
spec:
  serviceName: "{{.Values.master_name}}"
  replicas: {{.Values.master_replicas}}
  template:
    metadata:
      labels:
        app: {{.Values.name}}
        name: {{.Values.master_name}}
    spec:
      serviceAccount: {{.Values.name}}
      serviceAccountName: {{.Values.name}}
      initContainers:
      - name: sysctl
        image: busybox
        imagePullPolicy: IfNotPresent
        command: ["sysctl", "-w", "vm.max_map_count=262144"]
        securityContext: {"privileged": true}
      - name: chown
        image: {{.Values.image}}
        command: ["chown", "-v", "elasticsearch:elasticsearch", {{ .Values.master_data_mount | quote }} ]
        volumeMounts:
        - name: esdata
          mountPath: {{ .Values.master_data_mount }}
      # end initContainers
      containers:
      - name: {{.Values.name}}
        image: {{.Values.image}}
        # run hello.sh
        #                              Elasticsearch bin directory                                                     run file
        #                                             copy from read only filesystem       chmod in read-write filesystem................run normal start script
        command: [ "/bin/bash", "-c", "BIN=$(pwd)/bin;cp ${BIN}/hello.sh ${BIN}/hello2.sh; chmod 777 ${BIN}/hello2.sh; ${BIN}/hello2.sh; /usr/local/bin/docker-entrypoint.sh eswrapper" ]
        ports:
        - name: {{ .Values.services.discovery.cluster_port_name }}
          containerPort: {{ .Values.services.discovery.cluster_port }}
        #  resource notes:  master is light weight so half a CPU.  Less then 4GB causes the container to OOM
        resources:
          limits:
            cpu: {{.Values.master_cpu_limits}}
            memory: {{.Values.master_memory_limits}}
          requests:
            cpu: {{.Values.master_cpu_requests}}
            memory: {{.Values.master_memory_requests}}
        securityContext:
          privileged: true
          capabilities:
            add:
              - IPC_LOCK
              - SYS_RESOURCE
        env:
        {{- range $key, $value := .Values.master_envs }}
          - name: "{{ $key }}"
            value: "{{ $value }}"
        {{- end }}
          - name: ELASTIC_PASSWORD
            valueFrom: 
              secretKeyRef:
                key: password
                name: {{ template "fullname" . }}-auth
          - name: CLUSTER_NAME
            value: "{{ .Values.cluster_name }}"
          - name: SERVICE
            value: "{{ .Values.cluster_name }}"
          - name: NETWORK_HOST
            value: "{{ .Values.network_host }}"
          - name: DATA_MOUNT
            value: "{{ .Values.master_data_mount }}"
        #  the min/max *must* be the same due to elasticsearch 5.0 bootstrap checks
          - name: ES_JAVA_OPTS
            value: "-Xms{{ .Values.master_Xms_Xmx }} -Xmx{{ .Values.master_Xms_Xmx }} -Djava.net.preferIPv4Stack=true"
          - name: KUBERNETES_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: DISCOVERY_SERVICE
            value: "{{ .Values.services.discovery.service_name }}"
          - name: "NAMESPACE"
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
        imagePullPolicy: {{.Values.master_imagePullPolicy}}
      {{- if .Values.master_tolerations }}
      tolerations:
      {{- range .Values.master_tolerations }}
      - key: {{ .key | default ("") }}
        value: {{ .value | default ("")}}
        operator: {{ .operator | default ("Equal") }}
        effect: {{ .effect  | default ("")}}
      {{- end }}
      {{- end }}
      {{- if .Values.master_scheduling.affinity }}
      {{- if .Values.master_scheduling.affinity.node }}
      {{- if .Values.master_scheduling.affinity.node.labels }}
      affinity:
        nodeAffinity:
          {{ .Values.master_scheduling.affinity.node.type }}:
            nodeSelectorTerms:
            - matchExpressions:
                {{- range .Values.master_scheduling.affinity.node.labels }}
                - key: {{ .key }}
                  operator: {{ .operator }}
                  values:
                  {{- range .values }}
                  - {{ . }}
                  {{- end }}
                {{- end }}
      {{- end }}
      {{- end }}
      {{- end }}
        volumeMounts:
        - name: esconfig
          mountPath: /usr/share/elasticsearch/config/elasticsearch.yml
          subPath: elasticsearch.yml
        - name: hellosh
          mountPath: /usr/share/elasticsearch/bin/hello.sh
          subPath: hello.sh
        - name: elasticcertificates
          mountPath: /usr/share/elasticsearch/config/elastic-certificates.p12.b64
          subPath: elastic-certificates.p12.b64
        - name: esdata
          mountPath: {{ .Values.master_data_mount }}
      volumes:
      - name: esconfig
        configMap:
          name: {{ template "name" . }}
      - name: hellosh
        configMap:
          name: {{ template "name" . }}
      - name: elasticcertificates
        configMap:
          name: {{ template "name" . }}
  volumeClaimTemplates:
  - metadata:
      name: esdata
      annotations:
        {{ .Values.master_storage_class_key }}: {{ .Values.master_storage_class_value }}
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: {{.Values.master_volume_storage}}
