image: $HELM_REGISTRY_IMAGE:$HELM_REGISTRY_VERSION

variables:
  REGISTRY: quay.io
  REGISTRY_USER: samsung_cnct
  CHART_NAME: elasticsearch-chart
  ROBOT_ACCOUNT: elasticsearch_rw
  HELM_REGISTRY_IMAGE: quay.io/samsung_cnct/helm-registry-agent
  HELM_REGISTRY_VERSION: v0.7.4-helm_2.6
  KUBECTL_IMAGE: quay.io/samsung_cnct/kraken-tools:latest
# Create a Gitlab Secret Variable called REGISTRY_PASSWORD and assign it the value of the registry robot docker login password.
# DO NOT PASTE THIS PASSWORD HERE.

stages:
  - build
  - test
  - clean
  - publish

before_script:
  - helm registry login -u ${REGISTRY_USER}+${ROBOT_ACCOUNT} -p ${REGISTRY_PASSWORD} ${REGISTRY}

build_chart:
  stage: build
  only:
    - tags
    - branches
  artifacts:
    paths:
      - ${CHART_NAME}
  script:
    - build/build.sh

helm_test:
  stage: test
  only:
    - tags
    - branches
  variables:
    NAMESPACE: ${CHART_NAME}-test
    RELEASE: ${CHART_NAME}-test-${CI_PIPELINE_ID}
  before_script:
    - mkdir /root/.kube
    - echo ${TEST_KUBECONFIG} | base64 -d > /root/.kube/config
    - helm init
  script:
    - build/lint.sh
    - build/test-install.sh

clean_test:
  image: $KUBECTL_IMAGE
  stage: clean
  allow_failure: false
  only:
    - tags
    - branches
  variables:
    NAMESPACE: ${CHART_NAME}-test
    RELEASE: ${CHART_NAME}-test-${CI_PIPELINE_ID}
  before_script:
    - mkdir /root/.kube
    - echo ${TEST_KUBECONFIG} | base64 -d > /root/.kube/config
    - helm init
  script:
    - build/clean-install.sh

helm_publish_alpha:
  stage: publish
  only:
    - master
  script:
    - cd ${CHART_NAME} && helm registry push ${REGISTRY}/${REGISTRY_USER}/${CHART_NAME} -c alpha

helm_publish_tag:
  stage: publish
  only:
    - /v[0-9]+\.[0-9]+(\.[0-9]+[a-z]?)?/
  script:
    - cd ${CHART_NAME} && helm registry push ${REGISTRY}/${REGISTRY_USER}/${CHART_NAME} -c stable
