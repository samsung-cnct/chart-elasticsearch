apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: {{.Values.data_name}}
  labels:
    k8s-app: {{ template "name" . }}
    chart: "{{.Chart.Name}}-{{.Chart.Version}}"
    release: "{{.Release.Name}}"
    heritage: "{{.Release.Service}}"
spec:
  serviceName: "{{.Values.data_name}}"
  replicas: {{.Values.data_replicas}}
  template:
    metadata:
      labels:
        k8s-app: {{.Values.name}}
        name: {{.Values.data_name}}
    spec:
      serviceAccount: {{.Values.name}}
      serviceAccountName: {{.Values.name}}
      initContainers:
      - name: sysctl
        image: busybox
        imagePullPolicy: IfNotPresent
        command: ["sysctl", "-w", "vm.max_map_count=262144"]
        securityContext: {"privileged": true}
      containers:
      - name: {{.Values.name}}
        image: {{.Values.image}}
        ports:
        - name: {{.Values.cluster_port_name}}
          containerPort: {{.Values.cluster_port}}
        - name: {{.Values.port_name}}
          containerPort: {{.Values.port}}
        resources:
          limits:
            cpu: {{.Values.data_cpu_limits}}
            memory: {{.Values.data_memory_limits}}
          requests:
            cpu: {{.Values.data_cpu_requests}}
            memory: {{.Values.data_memory_requests}}
        securityContext:
          privileged: true
          capabilities:
            add:
              - IPC_LOCK
              - SYS_RESOURCE
        env:
        - name: CLUSTER_NAME
          value: "{{ .Values.cluster_name }}"
        - name: NODE_DATA
          value: "true"
        - name: NODE_MASTER
          value: "false"
        - name: SERVICE
          value: "{{ .Values.cluster_name }}"
        - name: HTTP_ENABLE
          value: "true"
        #  the min/max *must* be the same due to elasticsearch 5.0 bootstrap checks.  For a production settings
        #  this should be 16GB.  Don't go over 32GB as the JVM starts to have issues.
        - name: ES_JAVA_OPTS
          value: "-Xms{{ .Values.data_Xms_Xmx }} -Xmx{{ .Values.data_Xms_Xmx }} -Djava.net.preferIPv4Stack=true"
        - name: KUBERNETES_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        imagePullPolicy: Always
        volumeMounts:
        - name: esdata
          mountPath: /usr/share/elasticsearch/data
      {{- if .Values.data_tolerations }}
      tolerations:
      {{- range .Values.data_tolerations }}
      - key: {{ .key | default ("") }}
        value: {{ .value | default ("")}}
        operator: {{ .operator | default ("Equal") }}
        effect: {{ .effect  | default ("")}}
      {{- end }}
      {{- end }}
      {{- if .Values.data_scheduling.affinity }}
      {{- if .Values.data_scheduling.affinity.node }}
      {{- if .Values.data_scheduling.affinity.node.labels }}
      affinity:
        nodeAffinity:
          {{ .Values.data_scheduling.affinity.node.type }}:
            nodeSelectorTerms:
            - matchExpressions:
                {{- range .Values.data_scheduling.affinity.node.labels }}
                - key: {{ .key }}
                  operator: {{ .operator }}
                  values:
                  {{- range .values }}
                  - {{ . }}
                  {{- end }}
                {{- end }}
      {{- end }}
      {{- end }}
      {{- end }}
  volumeClaimTemplates:
  - metadata:
      name: esdata
      annotations:
        volume.alpha.kubernetes.io/storage-class: anything
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          #  set to small so when exploring with this the user doesn't accidentally create very large disks
          storage: {{.Values.data_volume_storage}}
